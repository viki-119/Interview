1.事件驱动：（与批处理相对应）
      http://zhidao.baidu.com/question/272868397.html?fr=iks&word=js%CA%C2%BC%FE%C7%FD%B6%AF&ie=gbk
2.float
	应用场景：先设置父元素的宽和高，然后让子元素在父元素里向左或者向右浮动。
	缺点：不能居中浮动；

3.吸顶  ：https://github.com/viki-119/JS/blob/master/%E5%90%B8%E9%A1%B6%E6%95%88%E6%9E%9C

4.块元素与内联元素的区别
      在css盒子模型中，我们提到了html元素中的块元素（block element）和内联元素（inline element）。那么它们究竟是什么呢？ 
      其实，这两种元素都是html规范中的概念。
      1.块元素(block element)一般是其他元素的容器元素，能容纳其他块元素/内联元素。
      最常见的就是P和div这两个，说的简单点，块元素就好比一个四方块，可以放其他的四方块，并可以呈现在页面上任何地方。
      2.默认情况下块元素，是独占一行的。常见的块元素：div、h1-h6标题、form（只能用来容纳其他块元素）、hr、p、table、ul、ol等。
      3.内联元素(inline element)也叫内嵌元素或行内元素，一般都是基于语义级(semantic)的基本元素。
      内联元素只能容纳文本或者其他内联元素，常见内联元素有a和span。 
      
      块元素与内联元素的区别？ 
      1.块元素，总是在新行上开始；内联元素，和其他元素都在一行上。 
      2.块元素，能容纳其他块元素或内联元素；内联元素，只能容纳文本或者其他内联元素。 
      3.块元素中高度，行高以及顶和底边距都可控制；内联元素中高，行高及顶和底边距不可改变。 
      	<span style="height:200px;">span</span>
	<div  style="height:200px;">div</div>
      (这上面的区别，指的是默认情况下的，不包括CSS的刻意控制。也就是说当使用css控制时，块元素和内联元素的属性差异会越来越小。) 

5.type=hidden的应用场景
      HTML----表单中隐藏域小结 
      基本语法：
      <input type="hidden" name="field＿name" value="value"> 
      作用：
      1 隐藏域在页面中对于用户是不可见的，在表单中插入隐藏域的目的在于收集或发送信息，以利于被处理表单的程序所使用
         。浏览者单击发送按钮发送表单的时候，隐藏域的信息也被一起发送到服务器。  
      2 有些时候我们要给用户一信息，让他在提交表单时提交上来以确定用户身份，如sessionkey，等等
         ．当然这些东西也能用cookie实现，但使用隐藏域就简单的多了．而且不会有浏览器不支持，用户禁用cookie的烦恼。
      
      3 有些时候一个form里有多个提交按钮，怎样使程序能够分清楚到底用户是按那一个按钮提交上来的呢？
         我们就可以写一个隐藏域，然后在每一个按钮处加上onclick="document.form.command.value="xx""
         然后我们接到数据后先检查command的值就会知道用户是按的那个按钮提交上来的。
      
      4 有时候一个网页中有多个form，我们知道多个form是不能同时提交的，但有时这些form确实相互作用，
         我们就可以在form中添加隐藏域来使它们联系起来。
      
      5 javascript不支持全局变量，但有时我们必须用全局变量，我们就可以把值先存在隐藏域里，它的值就不会丢失了。
      
      6 还有个例子，比如按一个按钮弹出四个小窗口，当点击其中的一个小窗口时其他三个自动关闭．可是IE不支持小窗口相互调用，
         所以只有在父窗口写个隐藏域，当小窗口看到那个隐藏域的值是close时就自己关掉。

6.==与===的区别：
https://github.com/viki-119/JS/blob/master/js%E4%B8%AD%E2%80%9C%3D%3D%E2%80%9D%E4%B8%8E%22%3D%3D%3D%22%E7%9A%84%E5%8C%BA%E5%88%AB

7.伪类 nth

8.如果在元素节点内定义了样式，但是想在css样式里让节点内定义的样式失效；

9.事件冒泡： http://caibaojian.com/javascript-stoppropagation-preventdefault.html
	http://www.cnblogs.com/vnii/archive/2011/12/19/2293311.html
      js阻止冒泡：w3c的方法是e.stopPropagation()，IE则是使用window.event.cancelBubble = true
      <ul onclick="alert('ul')" id="ul">
		<li id="li">click me</li>
		<li>click me</li>
	</ul>
	<script>
      	var _li=document.getElementById('li');
      	_li.onclick=function(){
      		window.event? window.event.cancelBubble = true : e.stopPropagation();
      		alert('li')
      	}
      </script>
      
       js阻止冒泡：
	if (e && e.stopPropagation) {//非IE浏览器 
      		e.stopPropagation(); 
	} 
	else {//IE浏览器 
		window.event.cancelBubble = true; 
	} 
	js阻止冒泡：
	//阻止事件冒泡
	function stopEventBubble(event){
		var e=event || window.event;
		
		if (e && e.stopPropagation){
		    e.stopPropagation();    
		}
		else{
		    e.cancelBubble=true;
		}
	}
      
      js阻止默认行为:w3c的方法是e.preventDefault()，IE则是使用window.event.returnValue = false;
	<ul onclick="alert('ul')" id="ul">
      	<li id="li">click me</li>
      	<li>click me</li>
      	<a href="http://caibaojian.com/" id="testA" >caibaojian.com</a>
	</ul>
      <script>
      	var a = document.getElementById("testA");
      	a.onclick =function(e){
      		if(e.preventDefault){
      			e.preventDefault();
      		}else{
      			window.event.returnValue = false;
      		}
      	}
      </script>
      js阻止默认事件
	<a href="http://www.baidu.com" target="_black">百度</a>
	var samp = document.getElementByTagName("a");
	samp.addEventListener("click",function(e){e.preventDefault()},false);
      
      javascript的return false只会阻止默认行为，而是用jQuery的话则既阻止默认行为又防止对象冒泡。
      
9.relative与absolute的区别
http://www.cnblogs.com/jenry/archive/2007/07/15/818660.html

参考的坐标不一样，absolute是绝对定位，以设置了position属性且position属性为absolute或者为relative的父元素（left=0;top=0）为参考点；
relative是以上一个同级元素为参考点，
http://zhidao.baidu.com/question/564383015.html

父元素是相对定位，子元素的绝对定位就相对于父元素来定位；absolute 要与top left 配合使用才好。

http://zhidao.baidu.com/question/69984464.html?qbl=relate_question_3&word=absolute%D3%EBrelative%B5%C4%C7%F8%B1%F0
解释：
1.绝对定位就是相对于父元素的定位，不受父元素内其他子元素的影响；子元素的绝对定位是相对于父元素来定位。
   且这里指的父元素是设置了position属性且position属性为relative或者absolute的父元素，如果没有这样的父元素，则相对于屏幕的左上方(0,0)
   处定位。top left
2.而相对定位是相对于同级元素的定位，也就是上一个同级元素；与margin配合使用时比较不错的选择；
（即把下一个同级元素的position设置为relative；则该元素就会相对于上一个同级元素定位）
    <style>
        #zzdivId{height:500px;width:300px;background: yellow;}
        #fdivId{margin:20px;height:200px;width:300px;background: red;}
        #zdivId1{height:100px;width:50px;background: blue;}
        #zdivId2{height:100px;width:50px;background: green;position: relative;margin:-100px 0 0 50px;}
    </style>
	<div id="zzdivId">
	    <div id="fdivId">
	        <div id="zdivId1">1</div>
	        <div id="zdivId2">2</div>
	    </div>
	</div>

10.::after与:after的区别
http://www.webhek.com/after-before/

11.input 标签都有哪些类型（粗略估计11个）
button     radio     checkbox     text
password   reset     submit       hidden
image      file      range

<input type="button" value="button"><br>
<input type="radio" value="radio">radio<br>
<input type="checkbox" value="checkbox">checkbox<br>
<input type="text" value="text"><br>
<input type="password" ><br>
<input type="reset"><br>
<input type="submit"><br>
<input type="hidden"><br>
<input type="image"><br>
<input type="file"><br>
<input type="range"><br>

12.事件的继承：
如果在父元素上写了一个点击事件，那么子元素会继承父元素的事件；
